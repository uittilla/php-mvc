<?php
/**
 * Index controller
 * 
 * Some blurp
 * 
 * @package ...
 * @author M Ibbotson
 */
class snmpController extends Controller 
{   

  private $host;
  private $community;
  private $hosts = Array("devxen" => "10.1.1.114",
                         "proxen" => "10.1.1.113", 
                        );
						
  private $load = Array("1 min Load"  => ".1.3.6.1.4.1.2021.10.1.3.1",
                        "5 min Load"  => ".1.3.6.1.4.1.2021.10.1.3.2",
                        "15 min Load" => ".1.3.6.1.4.1.2021.10.1.3.3"
						);
						
  private $cpu = Array ("Raw user cpu time"             => ".1.3.6.1.4.1.2021.11.50.0",
						"Percentages of system CPU time"=> ".1.3.6.1.4.1.2021.11.10.0",
						"Raw system cpu time"           => ".1.3.6.1.4.1.2021.11.52.0",
						"Percentages of idle CPU time"  => ".1.3.6.1.4.1.2021.11.11.0",
						"Raw idle cpu time"             => ".1.3.6.1.4.1.2021.11.53.0",
						"Raw nice cpu time"             => ".1.3.6.1.4.1.2021.11.51.0",
						"Total Swap Size"               => ".1.3.6.1.4.1.2021.4.3.0",
						"Available Swap Space"          => ".1.3.6.1.4.1.2021.4.4.0",
						"Total RAM in machine"          => ".1.3.6.1.4.1.2021.4.5.0",
						"Total RAM used"                => ".1.3.6.1.4.1.2021.4.6.0",
						"Total RAM Free"                => ".1.3.6.1.4.1.2021.4.11.0",
						"Total RAM Shared"              => ".1.3.6.1.4.1.2021.4.13.0",
						"Total RAM Buffered"            => ".1.3.6.1.4.1.2021.4.14.0"
						);
						
  private $disk = Array ("Path where the disk is mounted"      => ".1.3.6.1.4.1.2021.9.1.2.1",
				   		 "Path of the device for the partition"=> ".1.3.6.1.4.1.2021.9.1.3.1",
						 "Total size of the disk/partion"      => ".1.3.6.1.4.1.2021.9.1.6.1",
						 "Available space on the disk"         => ".1.3.6.1.4.1.2021.9.1.7.1",
						 "Used space on the disk"              => ".1.3.6.1.4.1.2021.9.1.8.1",
						 "Percentage of space used on disk"    => ".1.3.6.1.4.1.2021.9.1.9.1",
						 "Percentage of inodes used on disk"   => ".1.3.6.1.4.1.2021.9.1.10.1"
						 );
						 
  private $eth = Array ("ifInNUcastPkts"   => ".1.3.6.1.2.1.2.2.1.12.1",
						"ifInDiscards"     => ".1.3.6.1.2.1.2.2.1.13.1",
						"ifInErrors"       => ".1.3.6.1.2.1.2.2.1.14.1",
						"ifInUnknownProtos"=> ".1.3.6.1.2.1.2.2.1.15.1",
						"ifInOctets"       => ".1.3.6.1.2.1.2.2.1.10.1",
						"ifOutOctets"      => ".1.3.6.1.2.1.2.2.1.16.1",
						"ifOutUcastPkts"   => ".1.3.6.1.2.1.2.2.1.17.1",
						"ifOutDiscards"    => ".1.3.6.1.2.1.2.2.1.19.1",
						"ifOutErrors"      => ".1.3.6.1.2.1.2.2.1.20.1", 
						"ifOutQLen"        => ".1.3.6.1.2.1.2.2.1.21.1"
						);  					   
  
  /**
   * Display information on sets held within DEV, STAGING and LIVE 
   * List its dependancies (if any)
   * @package ...
   * @author: M Ibbotson
   */
   public function index() {
   	 snmp_set_valueretrieval(SNMP_VALUE_PLAIN);  
	 $this->community = "S3!m4nXb7";
	
	 if(!empty($_GET['host'])) 
	 {
	 	$this->host = $_GET['host'];
		$this->doAdvancedHost();
	 } 
	 else 
	 {
	    $this->doBasicHosts(); 	
	 }
	
	 foreach ($this->hosts as $key=>$val) {
	 	$this->tpl->assign('key', $key);
        $this->tpl->assign('val', $val);
		$this->tpl->parse('main.body.agents.agent');		
	 }
	 $this->tpl->parse('main.body.agents');
	
   	 $this->tpl->parse('main.body.default');
     $this->tpl->display();
   }
   
   private function doBasicHosts()
   {
   	   foreach ($this->hosts as $key=>$val)
	   {
	   	   $this->tpl->assign('key', $key);
		   $this->tpl->assign('val', $val);
		   
		   $sysDescr      = snmpget ($val, $this->community,"sysDescr.0");		
		   $ifUpTime      = snmpget ($val, $this->community,"sysUpTime.0");   
           $ifDescr       = snmpwalk($val, $this->community,"ifDescr");		   
           $ifIndex       = snmpwalk($val, $this->community,"ifIndex");		   
           $ifAdminStatus = snmpwalk($val, $this->community,"ifAdminStatus");
           $ifOperStatus  = snmpwalk($val, $this->community,"ifOperStatus");
           $ifLastChange  = snmpwalk($val, $this->community,"ifLastChange");		   
		   $activeUsers   = snmpget($val, $this->community,"hrSystemNumUsers.0");
		   
		   $this->tpl->assign('ifOperStatus', $ifOperStatus);
           $this->tpl->assign('ifLastChange', $ifLastChange);
		   $this->tpl->assign('ifAdminStatus', $ifAdminStatus);
           $this->tpl->assign('ifIndex', $ifIndex);
		   $this->tpl->assign('ifUpTime', $ifUpTime);
		   $this->tpl->assign('ifDescr', $ifDescr); 
		   $this->tpl->assign('sysDescr', $sysDescr);
		   $this->tpl->assign('users', $activeUsers);
		   
		   $this->tpl->parse('main.body.hosts.host');
		   
	   }
	   $this->tpl->parse('main.body.hosts');
	   
   }
   
   private function doAdvancedHost()
   {
   	  $host = $this->hosts[$this->host];
	  
	  $this->tpl->assign('host', $this->host);
	  
	  foreach ($this->load as $k=>$v){
	  	 $this->tpl->assign('key', $k);
		 $this->tpl->assign('val', snmpget($host, $this->community, $v));
		 $this->tpl->parse('main.body.advanced.load.entry');
	  } 
	  $this->tpl->parse('main.body.advanced.load');
	  
	  foreach ($this->cpu as $k=>$v){
         $this->tpl->assign('key', $k);
         $this->tpl->assign('val', snmpget($host, $this->community, $v));
         $this->tpl->parse('main.body.advanced.cpu.entry');
      }
      $this->tpl->parse('main.body.advanced.cpu');
	  
	  foreach ($this->disk as $k=>$v){
	  	 //$v = sprintf("%0.2f GB", $v);
         $this->tpl->assign('key', $k);
		 if(preg_match("/Percentage/", $k)){		 	
            $this->tpl->assign('val', snmpget($host, $this->community, $v) . "%");
		 } 
		 else if (preg_match("/Path/", $k))
		 {
		 	$this->tpl->assign('val', snmpget($host, $this->community, $v));
		 }
		 else {
		 	$val = (snmpget($host, $this->community, $v) / 1024);
		 	$val = sprintf("%0.2f GB", $val);
		 	$this->tpl->assign('val', $val);
		 }
         $this->tpl->parse('main.body.advanced.disk.entry');
      } 
	  $this->tpl->parse('main.body.advanced.disk');
	  
	  foreach ($this->eth as $k=>$v){
         $this->tpl->assign('key', $k);
         $this->tpl->assign('val', snmpget($host, $this->community, $v));
         $this->tpl->parse('main.body.advanced.eth.entry');
      } 
      $this->tpl->parse('main.body.advanced.eth');
	  
	  $this->tpl->parse('main.body.advanced');
	  
   }
}

